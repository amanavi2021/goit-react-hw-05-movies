{"version":3,"file":"static/js/134.9086df43.chunk.js","mappings":"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","sources":["pages/Movies.jsx","services/movies-api.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/getYear/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getYear } from 'date-fns';\nimport moviesApiService from 'services/movies-api';\n\n\nconst Movies = () => {\n\nconst [searchQuery, setSearchQuery] = useState('');\nconst [searchingMovies, setSearchingMovies] = useState([]);\nconst [error, setError] = useState('');\nconst location = useLocation();\nconst [searchParams, setSearchParams] = useSearchParams();\nconst query = searchParams.get('query') ?? '';\n// console.log('query', query);\n\nconst updateQueryString = event => {\n   const newQuery = event.currentTarget.value.toLowerCase();\n   const newParams = newQuery !== '' ? {query: newQuery} : {};\n   setSearchParams(newParams);\n    // setSearchQuery(event.currentTarget.value.toLowerCase());\n    \n};\n\nconst handleSubmit = event => {\n    event.preventDefault();\n    \n    // console.log('query', );\n    setSearchQuery(query);\n\n    if(query.trim() === '') {\n        return alert('ü¶Ñ Please enter text to search movies');\n    };\n\n    // setSearchParams({query: searchQuery});\n};\n\nuseEffect(() => {\n    async function getSearchingMovies() {\n      try {\n        const movies = await moviesApiService.fetchSearchingMovies(searchQuery);\n        // console.log('find', movies);\n        if (movies.results.length !==0) {\n          setSearchingMovies(movies.results);\n          setError('');\n        } else {\n          setError(\"üôÖ‚Äç‚ôÄÔ∏è Unfortunately there are no such movies\");\n        }\n        \n      } catch (error) {\n        setSearchingMovies([]);\n        setError(error);\n      }\n    }\n    if (searchQuery) {\n        getSearchingMovies();\n    };\n    \n  }, [searchQuery]);\n\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n          onChange={updateQueryString}\n        />\n         <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">Search</span>\n        </button>\n      </form>\n      {error ? <p>{error}</p> \n      :  <ul>{\n        searchingMovies.map(({id, title, release_date}) => \n            <li key={id}>\n                <Link to={`${id}`} state={{ from: location}}>{title} ({getYear(new Date(release_date))})</Link>\n            </li>\n        )}\n    </ul>} \n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\nconst API_KEY = \"0dd8a44a838b85596fd1a072a37c7f7d\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nasync function fetchTrandingMovies () {\nconst searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    page:1\n});\n\nconst url=`${BASE_URL}trending/movie/day?${searchParams}`;\n\nconst response = await axios.get(url);\nconst movies = response.data;\nreturn movies;\n\n};\n\nasync function fetchSearchingMovies (queryString) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page:1, \n        query: queryString\n\n    });\n    const url=`${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    const movies = response.data;\n    return movies;\n    \n    };\n\n    // https://api.themoviedb.org/3/movie/333?language=en-US\nasync function fetchMovie (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY\n\n    });\n    \n    const url=`${BASE_URL}movie/${id}?${searchParams}`;\n    const response = await axios.get(url);\n    const movie = response.data;\n    return movie;\n\n};\n\nasync function fetchReviews (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page: 1\n\n    });\n    // 'https://api.themoviedb.org/3/movie/44/reviews?language=en-US&page=1'\n    const url=`${BASE_URL}movie/${id}/reviews?${searchParams}`;\n    const response = await axios.get(url);\n    const reviews = response.data;\n    return reviews;\n\n};\n\nasync function fetchCast (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY\n\n    });\n\n    const url=`${BASE_URL}movie/${id}/credits?${searchParams}`;\n    const response = await axios.get(url);\n    const credits = response.data;\n    return credits;\n\n};\n\nconst api = {fetchTrandingMovies, fetchSearchingMovies, fetchMovie, fetchReviews, fetchCast};\nexport default api;","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}"],"names":["useState","searchQuery","setSearchQuery","searchingMovies","setSearchingMovies","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","moviesApiService","movies","results","length","getSearchingMovies","className","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","newQuery","currentTarget","toLowerCase","map","id","title","release_date","to","state","from","getYear","Date","API_KEY","BASE_URL","fetchTrandingMovies","URLSearchParams","api_key","page","url","axios","response","data","fetchSearchingMovies","queryString","fetchMovie","movie","fetchReviews","reviews","fetchCast","credits","api","requiredArgs","required","args","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","_typeof","getTime","console","warn","Error","stack","NaN","dirtyDate","getFullYear"],"sourceRoot":""}