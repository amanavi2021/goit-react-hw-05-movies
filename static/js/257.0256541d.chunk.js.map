{"version":3,"file":"static/js/257.0256541d.chunk.js","mappings":"8SAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,qSAiBRE,EAAYF,EAAAA,EAAAA,IAAH,uCAITG,EAAaH,EAAAA,EAAAA,IAAH,8CAIVI,EAAYJ,EAAAA,EAAAA,IAAH,iGAQTK,GAAWL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,sQAiBRO,EAAWP,EAAAA,EAAAA,GAAH,sG,SC8BrB,EA5EqB,WAAO,IAAD,IAChBQ,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEhDC,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,6GAEwBC,EAAAA,EAAAA,WAA4Bd,GAFpD,OAEUG,EAFV,OAGIC,EAASD,GACTG,EAAS,IAJb,gDAOIF,EAAS,IACTE,EAAS,EAAD,IARZ,0DAJY,sBACPN,GADO,mCAgBZe,EAED,GAAE,CAACf,IAEJ,IAGwB,EAHhBgB,EAAqEb,EAArEa,MAAOC,EAA8Dd,EAA9Dc,SAAUC,EAAoDf,EAApDe,aAAcC,EAAsChB,EAAtCgB,aAAcC,EAAwBjB,EAAxBiB,YAAaC,EAAWlB,EAAXkB,OAC5DC,GAAOC,EAAAA,EAAAA,GAAQ,IAAIC,KAAKL,IAC1BM,EAAY,GACK,IAAjBtB,EAAMuB,SACND,EAAS,UAAGJ,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAAxC,QAAgD,IAK/D,OACA,iCACI,UAACvC,EAAD,CAAUwC,GAAItB,EAASuB,QAAvB,WACA,SAAC,MAAD,CAAwBC,MAAO,CAAEC,YAAa,EAAGC,MAAO,KAAMC,OAAQ,QADtE,aAGgB,IAAfjC,EAAMuB,QAAcrB,GAAQ,oDAC3B,4BACF,UAACX,EAAD,YACA,SAACC,EAAD,CAAY0C,IAAKjB,EAAW,yCACQA,GAXnB,8EAYDkB,IAAKtB,EAAOmB,MAAM,SAClC,UAACvC,EAAD,YACI,0BAAKoB,EAAL,KAAcM,EAAd,QACA,wCAAgBiB,KAAKC,MAAoB,GAAdtB,GAA3B,SACA,sCACA,uBAAID,KACJ,oCACH,uBAAIQ,WAGL,mBACA,oDACA,UAAC1B,EAAD,YACE,yBACE,SAACF,EAAD,CAAUkC,GAAG,OAAb,qBAEF,yBACE,SAAClC,EAAD,CAAUkC,GAAG,UAAb,2BAGJ,mBACA,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACA,SAAC,KAAD,WAMP,C,8DC/EKC,EAAU,mCACVC,EAAW,gCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,iGACMC,EAAe,IAAIC,gBAAgB,CACrCC,QAASL,EACTM,KAAK,IAGHC,EANN,UAMaN,EANb,8BAM2CE,GAN3C,SAQuBK,EAAAA,EAAAA,IAAUD,GARjC,cAQME,EARN,OASMC,EAASD,EAASE,KATxB,kBAUOD,GAVP,kEAceE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAqCC,GAArC,oFACUV,EAAe,IAAIC,gBAAgB,CACrCC,QAASL,EACTM,KAAK,EACLQ,MAAOD,IAGLN,EAPV,UAOiBN,EAPjB,wBAOyCE,GAPzC,SAQ2BK,EAAAA,EAAAA,IAAUD,GARrC,cAQUE,EARV,OASUC,EAASD,EAASE,KAT5B,kBAUWD,GAVX,kEAeeK,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2B1D,GAA3B,oFACU8C,EAAe,IAAIC,gBAAgB,CACrCC,QAASL,IAIPO,EANV,UAMiBN,EANjB,iBAMkC5C,EANlC,YAMwC8C,GANxC,SAO2BK,EAAAA,EAAAA,IAAUD,GAPrC,cAOUE,EAPV,OAQUjD,EAAQiD,EAASE,KAR3B,kBASWnD,GATX,kEAaewD,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6B3D,GAA7B,oFACU8C,EAAe,IAAIC,gBAAgB,CACrCC,QAASL,EACTM,KAAM,IAIJC,EAPV,UAOiBN,EAPjB,iBAOkC5C,EAPlC,oBAOgD8C,GAPhD,SAQ2BK,EAAAA,EAAAA,IAAUD,GARrC,cAQUE,EARV,OASUQ,EAAUR,EAASE,KAT7B,kBAUWM,GAVX,kEAceC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0B7D,GAA1B,oFACU8C,EAAe,IAAIC,gBAAgB,CACrCC,QAASL,IAIPO,EANV,UAMiBN,EANjB,iBAMkC5C,EANlC,oBAMgD8C,GANhD,SAO2BK,EAAAA,EAAAA,IAAUD,GAPrC,cAOUE,EAPV,OAQUU,EAAUV,EAASE,KAR7B,kBASWQ,GATX,kEAaA,IAAMC,EAAM,CAAClB,oBAvEb,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAqEmBU,qBAzDhC,SAEaA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAuDyCG,W,SAxCzCA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAwCqDC,aA7BlE,SAEaA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA2BmEE,UAfhF,SAEaA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAcf,K","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport const BackLink = styled(Link)`\nborder: 1px solid black;\npadding: 5px 10px;\ntext-decoration: none;\nborder-radius: 10px;\ndisplay: flex;\nwidth: 90px;\ncolor: black;\nmargin-bottom: 16px;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover, focus{\n    color:rgb(196, 185, 185);\n}\n\n`;\n\nexport const MovieCard = styled.div`\ndisplay:flex;\n`;\n\nexport const MovieImage = styled.img`\nborder-radius: 10px;\n`;\n\nexport const MovieInfo = styled.div`\npadding-left: 16px;\ndisplay:flex;\nflex-direction: column;\ngap: 16px;\n`;\n\n\nexport const InfoLink = styled(NavLink)`\n// padding:  8px 8px;\ntext-decoration: none;\nfont-weight: 500;\ncolor: black;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&.active\n{\n    color: rgb(255, 0, 111);\n};\n\n&:hover, focus{\n    color:rgb(196, 185, 185);\n}\n`;\n\nexport const MovieNav = styled.ul`\nlist-style-type: none;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\n\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport {useParams, Outlet, useLocation} from 'react-router-dom';\nimport { getYear } from 'date-fns';\nimport { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport moviesApiService from 'services/movies-api';\nimport { BackLink, MovieCard, MovieImage, MovieInfo, InfoLink, MovieNav} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n    const {id} = useParams();\n    const [movie, setMovie] = useState([]);\n    const [error, setError] = useState('');\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n        if (!id) {\n          return;\n        }\n        async function getMovieDetails() {\n          try {\n            const movie = await moviesApiService.fetchMovie(id);\n            setMovie(movie);\n            setError('');\n    \n          } catch (error) {\n            setMovie([]);\n            setError(error);\n          }\n        };\n\n        getMovieDetails();\n        \n      }, [id]);\n    \n      const { title, overview, vote_average, release_date, poster_path, genres } = movie;\n      const year = getYear(new Date(release_date));\n      let genreList = '';\n      if (movie.length !== 0) {\n          genreList = genres.map(genre => genre.name).join(' ') ?? '';\n      };\n\n      const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    return (\n    <>\n        <BackLink to={backLink.current}>\n        <IoArrowBackCircleSharp style={{ marginRight: 8, width: '20', height: '20' }}/>\n          Go back</BackLink>\n        {movie.length===0 || error ? <p>There are no such movie</p>\n        : <div>\n        <MovieCard>\n        <MovieImage src={poster_path ?\n          `https://image.tmdb.org/t/p/w500${poster_path}` \n          : defaultImg} alt={title} width='200'/>\n        <MovieInfo>\n            <h2>{title} ({year})</h2>\n            <p>User Score: {Math.round(vote_average *10)}% </p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n         <p>{genreList}</p>\n        </MovieInfo>\n        </MovieCard>\n        <hr/>\n        <h3>Additional information</h3>\n        <MovieNav>\n          <li>\n            <InfoLink to='cast'>Cast</InfoLink>\n          </li>\n          <li>\n            <InfoLink to='reviews'>Reviews</InfoLink>\n          </li>\n        </MovieNav>\n        <hr/>\n        <Suspense fallback={<div>Loading...</div>}>\n        <Outlet/>\n        </Suspense>\n        </div>}\n        \n    </>\n    )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = \"0dd8a44a838b85596fd1a072a37c7f7d\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nasync function fetchTrandingMovies () {\nconst searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    page:1\n});\n\nconst url=`${BASE_URL}trending/movie/day?${searchParams}`;\n\nconst response = await axios.get(url);\nconst movies = response.data;\nreturn movies;\n\n};\n\nasync function fetchSearchingMovies (queryString) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page:1, \n        query: queryString\n\n    });\n    const url=`${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    const movies = response.data;\n    return movies;\n    \n    };\n\n    // https://api.themoviedb.org/3/movie/333?language=en-US\nasync function fetchMovie (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY\n\n    });\n    \n    const url=`${BASE_URL}movie/${id}?${searchParams}`;\n    const response = await axios.get(url);\n    const movie = response.data;\n    return movie;\n\n};\n\nasync function fetchReviews (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page: 1\n\n    });\n    // 'https://api.themoviedb.org/3/movie/44/reviews?language=en-US&page=1'\n    const url=`${BASE_URL}movie/${id}/reviews?${searchParams}`;\n    const response = await axios.get(url);\n    const reviews = response.data;\n    return reviews;\n\n};\n\nasync function fetchCast (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY\n\n    });\n\n    const url=`${BASE_URL}movie/${id}/credits?${searchParams}`;\n    const response = await axios.get(url);\n    const credits = response.data;\n    return credits;\n\n};\n\nconst api = {fetchTrandingMovies, fetchSearchingMovies, fetchMovie, fetchReviews, fetchCast};\nexport default api;"],"names":["BackLink","styled","Link","MovieCard","MovieImage","MovieInfo","InfoLink","NavLink","MovieNav","id","useParams","useState","movie","setMovie","error","setError","location","useLocation","backLink","useRef","state","from","useEffect","moviesApiService","getMovieDetails","title","overview","vote_average","release_date","poster_path","genres","year","getYear","Date","genreList","length","map","genre","name","join","to","current","style","marginRight","width","height","src","alt","Math","round","Suspense","fallback","API_KEY","BASE_URL","fetchTrandingMovies","searchParams","URLSearchParams","api_key","page","url","axios","response","movies","data","fetchSearchingMovies","queryString","query","fetchMovie","fetchReviews","reviews","fetchCast","credits","api"],"sourceRoot":""}