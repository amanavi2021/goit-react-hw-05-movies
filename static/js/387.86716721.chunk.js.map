{"version":3,"file":"static/js/387.86716721.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsItem = styled.li`\nmargin-bottom: 20px;\n`;\n\nexport const ReviewAuthor = styled.h4`\nmargin-bottom: 8px;\n`;\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesApiService from 'services/movies-api';\nimport { ReviewsItem, ReviewAuthor } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    async function getReviews() {\n      try {\n        const reviews = await moviesApiService.fetchReviews(id);\n        if (reviews.results.length !== 0) {\n          setReviews(reviews.results);\n          setError('');\n        } else {\n          setError(\"üë®‚Äçüíª We don't have any reviews for this movie\");\n        }\n\n      } catch (error) {\n        setReviews([]);\n        setError(error);\n      }\n    }\n\n    getReviews();\n  }, [id]);\n\n  return (\n    <>\n      {error ? <p>{error}</p> : \n     <ul>\n     {reviews.map(({ author, content }) => (\n       <ReviewsItem key={author}>\n         <ReviewAuthor>Author: {author}</ReviewAuthor>\n         <p>{content}</p>\n       </ReviewsItem>\n     ))}\n   </ul>\n    }\n    </>\n   \n    \n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst API_KEY = \"0dd8a44a838b85596fd1a072a37c7f7d\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nasync function fetchTrandingMovies () {\nconst searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    page:1\n});\n\nconst url=`${BASE_URL}trending/movie/day?${searchParams}`;\n\nconst response = await axios.get(url);\nconst movies = response.data;\nreturn movies;\n\n};\n\nasync function fetchSearchingMovies (queryString) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page:1, \n        query: queryString\n\n    });\n    const url=`${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    const movies = response.data;\n    return movies;\n    \n    };\n\nasync function fetchMovie (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY\n\n    });\n    \n    const url=`${BASE_URL}movie/${id}?${searchParams}`;\n    const response = await axios.get(url);\n    const movie = response.data;\n    return movie;\n\n};\n\nasync function fetchReviews (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page: 1\n\n    });\n    const url=`${BASE_URL}movie/${id}/reviews?${searchParams}`;\n    const response = await axios.get(url);\n    const reviews = response.data;\n    return reviews;\n\n};\n\nasync function fetchCast (id) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY\n\n    });\n\n    const url=`${BASE_URL}movie/${id}/credits?${searchParams}`;\n    const response = await axios.get(url);\n    const credits = response.data;\n    return credits;\n\n};\n\nconst api = {fetchTrandingMovies, fetchSearchingMovies, fetchMovie, fetchReviews, fetchCast};\nexport default api;"],"names":["ReviewsItem","styled","ReviewAuthor","id","useParams","useState","reviews","setReviews","error","setError","useEffect","moviesApiService","results","length","getReviews","map","author","content","API_KEY","BASE_URL","fetchTrandingMovies","searchParams","URLSearchParams","api_key","page","url","axios","response","movies","data","fetchSearchingMovies","queryString","query","fetchMovie","movie","fetchReviews","fetchCast","credits","api"],"sourceRoot":""}